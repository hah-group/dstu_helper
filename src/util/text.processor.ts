/*
import { GroupWithScheduleFullType } from '../study-group/group-with-schedule-full.type';
import * as moment from 'moment';
import { WeekdayDefinition } from './weekday.definition';
import { TimeRelativeProcessor } from './time-relative.processor';
import { LessonType, Schedule } from '@prisma/client';

export const SCHEDULE_ACTIVATION = /—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ( –ø–∞—Ä)?.*!/gi;
export const WHAT_ACTIVATION = /(—á—Ç–æ|—á–æ|—à–æ|—á–µ|—á—ë) (?!–Ω–∞ –∑–∞–≤—Ç—Ä–∞)(–Ω–∞ |—É –Ω–∞—Å –∑–∞–≤—Ç—Ä–∞|–ø–æ –ø–∞—Ä–∞–º).*!/gi;
export const WHOM_ACTIVATION = /(.*–∫–∞–∫–∏–µ .*?(–ø–∞—Ä—ã).*|–ø–∞—Ä—ã.*?–∫–∞–∫–∏–µ)/gi;
export const AT_ACTIVATION = /–ø–∞—Ä—ã (–Ω–∞|–≤|–≤–æ).*!/gi;

export const WHERE_AUDIENCE = /(–∫—É–¥–∞|–≥–¥–µ|–∫–∞–∫–∞—è).{1,20}(–∏–¥—Ç–∏|–ø–∞—Ä–∞|–∞—É–¥–∏—Ç–æ—Ä–∏—è)/gi;

export const NEXT_AUDIENCE = /^(–∫–∞–∫–∞—è |–≥–¥–µ |—á—Ç–æ )?(–Ω–µ–∫—Å—Ç|—Å–ª–µ–¥—É—é—â–∞—è|—Å–ª–µ–¥)( –ø–∞—Ä–∞)?$/gi;

export const ADD_TO_GROUP = /!–¥–æ–±–∞–≤–∏—Ç—å –≤ –≥—Ä—É–ø–ø—É (.*)$/gi;
export const HELP_ACTIVATION = /!–ø–æ–º–æ—â—å/gi;

export class TextProcessor {
  static LAST_LESSON = '–≠—Ç–æ –ø–æ—Å–ª–µ–¥–Ω–Ω—è—è –ø–∞—Ä–∞';
  static LESSONS_ENDED = '–ü–∞—Ä—ã –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å';
  static TODAY_LESSON_NONE = '–°–µ–≥–æ–¥–Ω—è –ø–∞—Ä –Ω–µ—Ç';
  static NOW_LESSON_NONE = '–°–µ–π—á–∞—Å –ø–∞—Ä –Ω–µ—Ç';
  static SCHEDULE_UPDATING = '–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è, –Ω—É–∂–Ω–æ –Ω–µ–º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏';
  static WRITE_GROUP_NAME = '–ù–∞–ø–∏—à–∏ –∏–º—è –≥—Ä—É–ø–ø—ã';
  static SOURCE_NOT_FOUND_GROUP = '–¢–∞–∫–∞—è –≥—Ä—É–ø–ø–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞';
  static NOT_FOUND_GROUP = '–Ø –Ω–µ –Ω–∞—à–µ–ª —Ç–≤–æ–µ–π –≥—Ä—É–ø–ø—ã. –ù–∞–ø–∏—à–∏ !–¥–æ–±–∞–≤–∏—Ç—å –≤ –≥—Ä—É–ø–ø—É <–∏–º—è –≥—Ä—É–ø–ø—ã> —á—Ç–æ–±—ã –ø–æ–ª—É—á–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ';
  static HELP = `–Ø –±–æ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –î–ì–¢–£
–ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –º–æ–∂–µ—à—å –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—Å–∞—Ç—å:
—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ
—à–æ –ø–æ –ø–∞—Ä–∞–º
–∏ –ª—é–±—ã–µ –¥—Ä—É–≥–∏–µ –≤–æ–ø—Ä–æ—Å–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è

–¢–∞–∫–∂–µ –º–æ–∂–µ—à—å —É–∑–Ω–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –¥—Ä—É–≥–∏–µ –¥–Ω–∏:
—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∑–∞–≤—Ç—Ä–∞
–ø–∞—Ä—ã –Ω–∞ —á–µ—Ç–≤–µ—Ä–≥
—á–µ –ø–æ –ø–∞—Ä–∞–º –Ω–∞ –ø—Ç
–∏ –ª—é–±—ã–µ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç–∫–∏ –≤—Ä–µ–º–µ–Ω–∏

–¢–∞–∫–∂–µ –µ—Å—Ç—å —É–∫–æ—Ä–æ—á–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è:
–≥–¥–µ –ø–∞—Ä–∞
–∫–∞–∫–∞—è –Ω–µ–∫—Å—Ç –ø–∞—Ä–∞
–∏ –ª—é–±—ã–µ –¥—Ä—É–≥–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è

–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –≤–Ω–µ—Å—Ç–∏ —Å–µ–±—è –≤ –≥—Ä—É–ø–ø—É –Ω–∞–ø–∏—à–∏
!–¥–æ–±–∞–≤–∏—Ç—å –≤ –≥—Ä—É–ø–ø—É <–∏–º—è –≥—Ä—É–ø–ø—ã>`;

  public static youAddInGroup(groupName: string): string {
    return `–¢—ã –¥–æ–±–∞–≤–ª–µ–Ω –≤ –≥—Ä—É–ø–ø—É ${groupName}`;
  }

  public static Compile(schedule: GroupWithScheduleFullType, atDate: Date): string {
    const mnemonic = this.weekCompiler(atDate);
    const fullSchedule =
      moment().startOf('d').isSame(atDate) || Math.abs(moment().startOf('d').diff(moment(atDate).startOf('d'))) > 0;
    if (fullSchedule && schedule.Schedule.length < 1) return `–ü–∞—Ä –Ω–∞ ${mnemonic} –Ω–µ—Ç!`;
    if (schedule.Schedule.length < 1)
      return `–ü–∞—Ä—ã –Ω–∞ —Å–µ–≥–æ–¥–Ω—è –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å. –ï—Å–ª–∏ –Ω—É–∂–Ω–æ –ø–æ–ª–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ - –ø–∏—à–∏ "—Ñ—É–ª", "–ø–æ–ª–Ω–æ–µ", "–≤—Å—ë"`;

    let result = `–ü–∞—Ä—ã ${schedule.name} –Ω–∞ ${mnemonic}\n\n`;

    schedule.Schedule.forEach((lesson, index) => {
      const current = TimeRelativeProcessor.isNow(lesson, schedule.Schedule[index - 1]);
      result += `üìå ${lesson.lessonNumber} –ø–∞—Ä–∞ ${current ? '(–°–µ–π—á–∞—Å)' : ''} (${this.timeCompiler(
        lesson.start,
      )} - ${this.timeCompiler(lesson.end)})
üìï ${this.typeCompiler(lesson.lessonType)}: ${lesson.subjectName}
üè¢ –ê—É–¥–∏—Ç–æ—Ä–∏—è: ${lesson.corpus}-${lesson.classRoom}
${lesson.distance ? '‚ùóÔ∏è –ü–∞—Ä–∞ –¥–∏—Å—Ç–∞–Ω—Ü–∏–æ–Ω–Ω–∞—è' : ''}\n`;
    });

    return result;
  }

  public static ShortInfo(lesson: Omit<Schedule, 'id' | 'groupId' | 'updateAt'>): string {
    return `üìï ${this.typeCompiler(lesson.lessonType)}: ${lesson.subjectName}
‚è± ${this.timeCompiler(lesson.start)} - ${this.timeCompiler(lesson.end)}
üè¢ –ê—É–¥–∏—Ç–æ—Ä–∏—è: ${lesson.corpus}-${lesson.classRoom}${lesson.distance ? '\n‚ùóÔ∏è –ü–∞—Ä–∞ –¥–∏—Å—Ç–∞–Ω—Ü–∏–æ–Ω–Ω–∞—è' : ''}`;
  }

  private static timeCompiler(date: Date): string {
    return moment(date).format('HH:mm');
  }

  private static weekCompiler(date: Date): string {
    const currentDate = moment();
    const atDate = moment(date);
    const diff = Math.abs(currentDate.startOf('d').diff(atDate, 'd', true));
    if (diff > 1) return WeekdayDefinition[atDate.isoWeekday()];
    else {
      if (diff === 0) return '—Å–µ–≥–æ–¥–Ω—è';
      else if (diff === 1) return '–∑–∞–≤—Ç—Ä–∞';
    }
  }

  private static typeCompiler(type: LessonType): string {
    switch (type) {
      case LessonType.LECTURE:
        return '–õ–µ–∫—Ü–∏—è';
      case LessonType.PRACTICAL:
        return '–ü—Ä–∞–∫—Ç–∏–∫–∞';
      case LessonType.LABORATORY:
        return '–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è';
    }
  }
}
*/
